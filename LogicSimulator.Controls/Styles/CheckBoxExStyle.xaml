<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:LogicSimulator.Controls"
    xmlns:r="clr-namespace:LogicSimulator.Controls.Themes">
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type controls:CheckBoxEx}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.CheckBoxBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static r:ResourceKeys.CheckBoxBorderBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static r:ResourceKeys.CheckBoxForegroundBrush}}" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CheckBoxEx}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="checkBoxBorder"
                            Width="14"
                            Height="14"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <Grid x:Name="markGrid">
                                <Path
                                    x:Name="optionMark"
                                    Margin="2.5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 9 1 L 3 7 L 0 4 L 1 3 L 3 5 L 8 0 z"
                                    Fill="{DynamicResource {x:Static r:ResourceKeys.CheckBoxGlyphBackgroundBrush}}"
                                    Opacity="0"
                                    SnapsToDevicePixels="True"
                                    Stretch="Uniform"
                                    UseLayoutRounding="True" />
                                <Rectangle
                                    x:Name="indeterminateMark"
                                    Margin="3"
                                    Fill="{DynamicResource {x:Static r:ResourceKeys.CheckBoxGlyphBackgroundBrush}}"
                                    Opacity="0"
                                    RadiusX="1"
                                    RadiusY="1" />
                                <Rectangle
                                    x:Name="Rectangle"
                                    Width="6"
                                    Height="6"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="#F4E48C"
                                    RadiusX="2"
                                    RadiusY="2"
                                    Visibility="Collapsed">
                                    <Rectangle.ToolTip>
                                        <ToolTip
                                            Padding="3,1,3,1"
                                            Background="#353535"
                                            BorderBrush="#1C1C1C"
                                            Content="Значение не определено."
                                            FontSize="12"
                                            Foreground="White"
                                            SnapsToDevicePixels="True" />
                                    </Rectangle.ToolTip>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.CheckBoxMouseOverBackground}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource {x:Static r:ResourceKeys.CheckBoxFocusedBorderBrush}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsValueUndefined" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="optionMark" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="indeterminateMark" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="Rectangle" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>