<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adc="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
    xmlns:adconv="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
    xmlns:adp="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
    xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:r="clr-namespace:LogicSimulator.Controls.AvalonDock.Themes"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../OverlayButtons.xaml" />
        <ResourceDictionary Source="Icons/IconGeometry.xaml" />
        <ResourceDictionary Source="/WpfExtensions.Controls;component/Styles/ContextMenuStyle.xaml" />
        <ResourceDictionary Source="/WpfExtensions.Controls;component/Styles/MenuItemStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DropDownControlArea" TargetType="adc:DropDownControlArea" />

    <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type adc:MenuItemEx}">
        <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
        <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
        <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}" />
        <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
        <Setter Property="Command" Value="{Binding Path=., Converter={adconv:ActivateCommandLayoutItemFromLayoutModelConverter}}" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type ContextMenu}}" TargetType="{x:Type adc:ContextMenuEx}" />

    <Style x:Key="ToolButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ToolButtonBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static r:ResourceKeys.ToolButtonForeground}}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        TextElement.Foreground="{TemplateBinding Foreground}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ToolButtonHoveredBackground}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static r:ResourceKeys.ToolButtonHoveredForeground}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ToolButtonCheckedBackground}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static r:ResourceKeys.ToolButtonCheckedForeground}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ToolButtonPressedBackground}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static r:ResourceKeys.ToolButtonPressedForeground}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ButtonBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static r:ResourceKeys.ButtonForeground}}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        TextElement.Foreground="{TemplateBinding Foreground}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ButtonHoveredBackground}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static r:ResourceKeys.ButtonHoveredForeground}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ButtonPressedBackground}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static r:ResourceKeys.ButtonPressedForeground}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="DocumentHeaderTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AnchorableHeaderTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="DocumentTitleTemplate">
        <TextBlock
            VerticalAlignment="Center"
            Text="{Binding Title}"
            TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AnchorableTitleTemplate">
        <TextBlock
            VerticalAlignment="Center"
            Text="{Binding Title}"
            TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="IconContentTemplate">
        <Image Source="{Binding IconSource, Converter={adconv:NullToDoNothingConverter}}" Stretch="Uniform" />
    </DataTemplate>

    <ContextMenu x:Key="AnchorableContextMenu">
        <MenuItem Command="{Binding Path=FloatCommand}" Header="{x:Static adp:Resources.Anchorable_Float}" />
        <MenuItem Command="{Binding Path=DockCommand}" Header="{x:Static adp:Resources.Anchorable_Dock}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}" Header="{x:Static adp:Resources.Anchorable_DockAsDocument}" />
        <MenuItem Command="{Binding Path=AutoHideCommand}" Header="{x:Static adp:Resources.Anchorable_AutoHide}" />
        <MenuItem
            Command="{Binding Path=HideCommand}"
            Header="{x:Static adp:Resources.Anchorable_Hide}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={adconv:BoolToVisibilityConverter}}" />
    </ContextMenu>

    <ContextMenu x:Key="DocumentContextMenu">
        <MenuItem
            Command="{Binding Path=CloseCommand}"
            Header="{x:Static adp:Resources.Document_Close}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={adconv:BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=CloseAllButThisCommand}" Header="{x:Static adp:Resources.Document_CloseAllButThis}" />
        <MenuItem Command="{Binding Path=CloseAllCommand}" Header="{x:Static adp:Resources.Document_CloseAll}" />
        <MenuItem Command="{Binding Path=FloatCommand}" Header="{x:Static adp:Resources.Document_Float}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}" Header="{x:Static adp:Resources.Document_DockAsDocument}" />
        <MenuItem
            Command="{Binding Path=NewHorizontalTabGroupCommand}"
            Header="{x:Static adp:Resources.Document_NewHorizontalTabGroup}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={adconv:BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Path
                    Width="14"
                    Height="14"
                    VerticalAlignment="Center"
                    Data="{DynamicResource HTabGroup}"
                    Fill="{DynamicResource {x:Static r:ResourceKeys.MenuItemIconBrush}}"
                    Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>

        <MenuItem
            Command="{Binding Path=NewVerticalTabGroupCommand}"
            Header="{x:Static adp:Resources.Document_NewVerticalTabGroup}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={adconv:BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Path
                    Width="14"
                    Height="14"
                    VerticalAlignment="Center"
                    Data="{DynamicResource VTabGroup}"
                    Fill="{DynamicResource {x:Static r:ResourceKeys.MenuItemIconBrush}}"
                    Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            Command="{Binding Path=MoveToNextTabGroupCommand}"
            Header="{x:Static adp:Resources.Document_MoveToNextTabGroup}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={adconv:BoolToVisibilityConverter}}" />
        <MenuItem
            Command="{Binding Path=MoveToPreviousTabGroupCommand}"
            Header="{x:Static adp:Resources.Document_MoveToPreviousTabGroup}"
            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={adconv:BoolToVisibilityConverter}}" />
    </ContextMenu>

    <Style x:Key="DocumentPaneControlStyle" TargetType="{x:Type adc:LayoutDocumentPaneControl}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.TabBackground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type adc:LayoutDocumentPaneControl}">
                    <Grid
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Grid
                            Grid.Row="0"
                            Panel.ZIndex="1"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type adc:LayoutDocumentPaneControl}}, Path=Model.ShowHeader, Converter={adconv:BoolToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <adc:DocumentPaneTabPanel
                                x:Name="HeaderPanel"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="0"
                                IsItemsHost="true"
                                KeyboardNavigation.TabIndex="1" />
                            <adc:DropDownButton
                                x:Name="MenuDropDownButton"
                                Grid.Column="1"
                                Padding="3"
                                VerticalAlignment="Center"
                                Focusable="False"
                                Style="{StaticResource ToolButtonStyle}">
                                <adc:DropDownButton.DropDownContextMenu>
                                    <adc:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource {x:Type ContextMenu}}" />
                                </adc:DropDownButton.DropDownContextMenu>
                                <Path
                                    Height="8"
                                    Data="{DynamicResource PinDocMenu}"
                                    Fill="{Binding ElementName=MenuDropDownButton, Path=Foreground}"
                                    Stretch="Uniform" />
                            </adc:DropDownButton>
                        </Grid>
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource {x:Static r:ResourceKeys.PanelBorderBrush}}"
                            BorderThickness="1"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                            <Setter TargetName="ContentPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MenuDropDownButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.DocumentTabUnselectedBackground}}" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true">
                                    <Border
                                        x:Name="Bd"
                                        Margin="0,0,-1,0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="#222222"
                                        BorderThickness="1,1,1,0"
                                        CornerRadius="3 3 0 0" />
                                    <Border
                                        x:Name="Border"
                                        Margin="1,0,0,-1"
                                        BorderBrush="{DynamicResource {x:Static r:ResourceKeys.DocumentTabSelectedBackground}}"
                                        BorderThickness="0,0,0,1"
                                        Visibility="Collapsed" />
                                    <ContentPresenter
                                        x:Name="Content"
                                        HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                        VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                        ContentSource="Header"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.DocumentTabSelectedBackground}}" />
                                        <Setter TargetName="Border" Property="Visibility" Value="Visible" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.DocumentTabActiveBackground}}" />
                                    </DataTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true" />
                                            <Condition Property="Selector.IsSelected" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.DocumentTabUnselectedHoveredBackground}}" />
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>

                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <adc:LayoutDocumentTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <adc:LayoutDocumentControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type adc:LayoutDocumentControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type adc:LayoutDocumentControl}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type adc:LayoutDocumentTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type adc:LayoutDocumentTabItem}">
                    <adc:DropDownControlArea
                        DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}"
                        DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{DynamicResource DropDownControlArea}">
                        <Border
                            x:Name="Header"
                            Height="21"
                            Margin="0"
                            Padding="6,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource {x:Static r:ResourceKeys.Background}}"
                            BorderThickness="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="2" Background="Transparent" />
                                <ContentPresenter
                                    Margin="0"
                                    VerticalAlignment="Center"
                                    Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                    ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                    TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}" />
                                <Button
                                    x:Name="DocumentCloseButton"
                                    Grid.Column="1"
                                    Width="14"
                                    Height="14"
                                    Margin="3,0,0,0"
                                    Padding="3"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ButtonStyle}"
                                    ToolTip="{x:Static adp:Resources.Document_Close}"
                                    Visibility="Hidden">
                                    <Path
                                        Data="{DynamicResource PinClose}"
                                        Fill="{Binding ElementName=DocumentCloseButton, Path=Foreground}"
                                        Stretch="Uniform" />
                                </Button>
                            </Grid>
                        </Border>
                    </adc:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <DataTrigger Binding="{Binding Path=IsLastFocusedDocument}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=IsActive}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CanClose}" Value="false" />
                                <Condition Binding="{Binding Path=CanHide}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Command" Value="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="DocumentCloseButton" Property="ToolTip" Value="{x:Static adp:Resources.Anchorable_Hide}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CanClose}" Value="false" />
                                <Condition Binding="{Binding Path=CanHide}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AnchorablePaneControlStyle" TargetType="{x:Type adc:LayoutAnchorablePaneControl}">
        <Setter Property="TabStripPlacement" Value="Bottom" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.TabBackground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type adc:LayoutAnchorablePaneControl}">
                    <Grid
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource {x:Static r:ResourceKeys.PanelBorderBrush}}"
                            BorderThickness="0"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <adc:AnchorablePaneTabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="1"
                            Margin="0"
                            Panel.ZIndex="1"
                            IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ToolWindowTabUnselectedBackground}}" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true">
                                    <Border
                                        x:Name="SelectedBD"
                                        Margin="1,-1,0,0"
                                        BorderBrush="{DynamicResource {x:Static r:ResourceKeys.ToolWindowTabSelectedBackground}}"
                                        BorderThickness="0,1,0,0"
                                        Visibility="Collapsed" />
                                    <Border
                                        x:Name="Bd"
                                        Margin="0,0,-1,0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{DynamicResource {x:Static r:ResourceKeys.PanelBorderBrush}}"
                                        BorderThickness="1,0,1,1"
                                        CornerRadius="0 0 3 3">
                                        <ContentPresenter
                                            x:Name="Content"
                                            Margin="6,2"
                                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                            ContentSource="Header"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="true">
                                        <Setter TargetName="SelectedBD" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static r:ResourceKeys.PanelBorderBrush}}" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ToolWindowTabSelectedBackground}}" />
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true" />
                                            <Condition Property="Selector.IsSelected" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ToolWindowTabUnselectedHoveredBackground}}" />
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>

                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <adc:LayoutAnchorableTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <adc:LayoutAnchorableControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type adc:LayoutAnchorableControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type adc:LayoutAnchorableControl}">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource {x:Static r:ResourceKeys.PanelBorderBrush}}"
                        BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Header">
                                <adc:AnchorablePaneTitle Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                            <ContentPresenter
                                Grid.Row="1"
                                Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplate="{Binding LayoutItem.View.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplateSelector="{Binding LayoutItem.View.ContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                FlowDirection="{TemplateBinding FlowDirection}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model}" Value="{x:Null}">
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="False">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="False">
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type adc:LayoutAnchorableTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type adc:LayoutAnchorableTabItem}">
                    <adc:DropDownControlArea
                        DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}"
                        DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{DynamicResource DropDownControlArea}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter
                                    Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                    ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
                                <adc:DropDownControlArea
                                    Grid.Column="0"
                                    DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                    DropDownContextMenuDataContext="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </adc:DropDownControlArea>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="adc:AnchorablePaneTitle">
        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ToolWindowCaptionInactiveBackground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <adc:DropDownControlArea
                                Margin="3,0,0,0"
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{DynamicResource DropDownControlArea}">
                                <ContentPresenter
                                    x:Name="Header"
                                    Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextElement.Foreground="{TemplateBinding Foreground}" />
                            </adc:DropDownControlArea>

                            <adc:DropDownButton
                                x:Name="MenuDropDownButton"
                                Grid.Column="1"
                                Width="14"
                                Height="14"
                                Margin="1"
                                Padding="2"
                                VerticalAlignment="Center"
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Style="{StaticResource ToolButtonStyle}"
                                ToolTip="{x:Static adp:Resources.Anchorable_CxMenu_Hint}">
                                <Path
                                    Data="{DynamicResource PinMenu}"
                                    Fill="{Binding ElementName=MenuDropDownButton, Path=Foreground}"
                                    Stretch="Uniform" />
                            </adc:DropDownButton>
                            <Button
                                x:Name="PART_AutoHidePin"
                                Grid.Column="2"
                                Width="14"
                                Height="14"
                                Margin="1"
                                Padding="2"
                                VerticalAlignment="Center"
                                Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Style="{StaticResource ButtonStyle}"
                                ToolTip="{x:Static adp:Resources.Anchorable_BtnAutoHide_Hint}"
                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={adconv:BoolToVisibilityConverter}}">
                                <Path
                                    Data="{DynamicResource PinAutoHide}"
                                    Fill="{Binding ElementName=PART_AutoHidePin, Path=Foreground}"
                                    RenderOptions.EdgeMode="Aliased"
                                    Stretch="Uniform" />
                            </Button>
                            <Button
                                x:Name="PART_HidePin"
                                Grid.Column="3"
                                Width="14"
                                Height="14"
                                Margin="1"
                                Padding="3"
                                VerticalAlignment="Center"
                                Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Style="{StaticResource ButtonStyle}"
                                ToolTip="{x:Static adp:Resources.Anchorable_BtnClose_Hint}"
                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={adconv:BoolToVisibilityConverter}}">
                                <Path
                                    Data="{DynamicResource PinClose}"
                                    Fill="{Binding ElementName=PART_HidePin, Path=Foreground}"
                                    Stretch="Uniform" />
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_AutoHidePin" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Model.CanClose, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_HidePin" Property="Command" Value="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_HidePin" Property="ToolTip" Value="{x:Static adp:Resources.Document_Close}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ToolWindowCaptionActiveBackground}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type adc:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type adc:LayoutDocumentFloatingWindowControl}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="MinWidth" Value="400" />
        <Setter Property="MinHeight" Value="400" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.FloatingDocumentWindowBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static r:ResourceKeys.FloatingDocumentWindowBorder}}" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
                    CaptionHeight="27"
                    CornerRadius="0"
                    GlassFrameThickness="0"
                    ResizeBorderThickness="7, 3, 7, 7"
                    ShowSystemMenu="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type adc:LayoutDocumentFloatingWindowControl}">
                    <Grid>
                        <Border
                            x:Name="WindowBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="7,0,7,7">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Border
                                    x:Name="Header"
                                    Height="29"
                                    Background="{TemplateBinding BorderBrush}">
                                    <Grid UseLayoutRounding="True">
                                        <ContentPresenter
                                            x:Name="HeaderContent"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />

                                        <Grid HorizontalAlignment="Right">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button
                                                x:Name="PART_PinMaximize"
                                                Grid.Column="0"
                                                Width="46"
                                                Height="22"
                                                VerticalAlignment="Top"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Focusable="False"
                                                Style="{StaticResource ButtonStyle}"
                                                ToolTip="{x:Static adp:Resources.Window_Maximize}"
                                                Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={adconv:InverseBoolToVisibilityConverter}}">
                                                <Path
                                                    x:Name="PART_ImgPinMaximize"
                                                    Width="10"
                                                    Height="10"
                                                    Data="{DynamicResource PinMaximize}"
                                                    Fill="{Binding ElementName=PART_PinMaximize, Path=Foreground}"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Stretch="Uniform" />
                                            </Button>

                                            <Button
                                                x:Name="PART_PinRestore"
                                                Grid.Column="0"
                                                Width="46"
                                                Height="22"
                                                VerticalAlignment="Top"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Focusable="False"
                                                Style="{StaticResource ButtonStyle}"
                                                ToolTip="{x:Static adp:Resources.Window_Restore}"
                                                Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={adconv:BoolToVisibilityConverter}}">
                                                <Path
                                                    x:Name="PART_ImgPinRestore"
                                                    Width="10"
                                                    Height="10"
                                                    Data="{DynamicResource PinRestore}"
                                                    Fill="{Binding ElementName=PART_PinRestore, Path=Foreground}"
                                                    Stretch="Uniform" />
                                            </Button>

                                            <Button
                                                x:Name="PART_PinClose"
                                                Grid.Column="1"
                                                Width="46"
                                                Height="22"
                                                VerticalAlignment="Top"
                                                shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Command="{Binding Path=CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                Focusable="False"
                                                Style="{StaticResource ButtonStyle}"
                                                ToolTip="{x:Static adp:Resources.Document_Close}"
                                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={adconv:BoolToVisibilityConverter}}">
                                                <Path
                                                    Width="10"
                                                    Height="10"
                                                    Data="{DynamicResource PinClose}"
                                                    Fill="{Binding ElementName=PART_PinClose, Path=Foreground}"
                                                    Stretch="Uniform" />
                                            </Button>
                                        </Grid>
                                    </Grid>
                                </Border>
                                <ContentPresenter
                                    Grid.Row="1"
                                    Margin="3"
                                    Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="8" />
                            <Setter TargetName="WindowBorder" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Height" Value="22" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsActive}" Value="True">
                            <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource {x:Static r:ResourceKeys.FloatingDocumentActiveWindowBorder}}" />
                            <Setter TargetName="Header" Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.FloatingDocumentActiveWindowBorder}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type adc:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type adc:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.FloatingToolWindowBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static r:ResourceKeys.FloatingToolWindowBorder}}" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
                    CaptionHeight="20"
                    CornerRadius="0"
                    GlassFrameThickness="0"
                    ResizeBorderThickness="10" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type adc:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border
                            x:Name="WindowBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="20" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border
                                    x:Name="Header"
                                    Padding="0"
                                    Background="{DynamicResource {x:Static r:ResourceKeys.ToolWindowCaptionInactiveBackground}}">
                                    <Grid Margin="2" UseLayoutRounding="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Border
                                            Padding="0"
                                            HorizontalAlignment="Left"
                                            Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={adconv:BoolToVisibilityConverter}}">
                                            <adc:DropDownControlArea
                                                Margin="3,0,0,0"
                                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{DynamicResource DropDownControlArea}">
                                                <ContentPresenter
                                                    Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                                    ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                    ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </adc:DropDownControlArea>
                                        </Border>

                                        <adc:DropDownButton
                                            x:Name="SinglePaneContextMenu"
                                            Grid.Column="1"
                                            Width="14"
                                            Height="14"
                                            Margin="1"
                                            Padding="2"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource ToolButtonStyle}"
                                            ToolTip="{x:Static adp:Resources.Anchorable_CxMenu_Hint}"
                                            Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={adconv:BoolToVisibilityConverter}}">
                                            <Path
                                                Data="{DynamicResource PinMenu}"
                                                Fill="{Binding ElementName=SinglePaneContextMenu, Path=Foreground}"
                                                Stretch="Uniform" />
                                        </adc:DropDownButton>

                                        <Button
                                            x:Name="PART_PinMaximize"
                                            Grid.Column="2"
                                            Width="14"
                                            Height="14"
                                            Margin="1"
                                            Padding="3"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource ButtonStyle}"
                                            ToolTip="{x:Static adp:Resources.Window_Maximize}"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={adconv:InverseBoolToVisibilityConverter}}">
                                            <Path
                                                Data="{DynamicResource PinMaximize}"
                                                Fill="{Binding ElementName=PART_PinMaximize, Path=Foreground}"
                                                RenderOptions.EdgeMode="Aliased"
                                                Stretch="Uniform" />
                                        </Button>

                                        <Button
                                            x:Name="PART_PinRestore"
                                            Grid.Column="2"
                                            Width="14"
                                            Height="14"
                                            Margin="1"
                                            Padding="2"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource ButtonStyle}"
                                            ToolTip="{x:Static adp:Resources.Window_Restore}"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={adconv:BoolToVisibilityConverter}}">
                                            <Path
                                                Data="{DynamicResource PinRestore}"
                                                Fill="{Binding ElementName=PART_PinRestore, Path=Foreground}"
                                                RenderOptions.EdgeMode="Aliased"
                                                Stretch="Uniform" />
                                        </Button>

                                        <Button
                                            x:Name="PART_PinClose"
                                            Grid.Column="3"
                                            Width="14"
                                            Height="14"
                                            Margin="1"
                                            Padding="3"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource ButtonStyle}"
                                            ToolTip="{x:Static adp:Resources.Anchorable_BtnClose_Hint}"
                                            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={adconv:BoolToVisibilityConverter}}">
                                            <Path
                                                Data="{DynamicResource PinClose}"
                                                Fill="{Binding ElementName=PART_PinClose, Path=Foreground}"
                                                Stretch="Uniform" />
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter
                                    Grid.Row="1"
                                    Margin="3"
                                    Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="8" />
                            <Setter TargetName="WindowBorder" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="True">
                            <Setter TargetName="Header" Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.ToolWindowCaptionActiveBackground}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.SinglePane.SelectedContent.CanClose, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_PinClose" Property="Command" Value="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_PinClose" Property="ToolTip" Value="{x:Static adp:Resources.Document_Close}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type adc:LayoutAutoHideWindowControl}" TargetType="{x:Type adc:LayoutAutoHideWindowControl}">
        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.TabBackground}}" />
        <Setter Property="AnchorableStyle">
            <Setter.Value>
                <Style TargetType="adc:LayoutAnchorableControl">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static r:ResourceKeys.PanelBorderBrush}}" />
                    <Setter Property="BorderThickness" Value="1" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="AnchorSideTemplate" TargetType="{x:Type adc:LayoutAnchorSideControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel
                        MinWidth="3"
                        MinHeight="3"
                        Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type adc:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={adconv:AnchorSideToOrientationConverter}}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AnchorGroupTemplate" TargetType="{x:Type adc:LayoutAnchorGroupControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.Style>
                <Style TargetType="{x:Type ItemsControl}">
                    <Style.Resources>
                        <RotateTransform x:Key="LeftRightAnchorSideRotateTransform" Angle="90" />
                    </Style.Resources>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Model.Parent.Side, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
                            <Setter Property="LayoutTransform" Value="{StaticResource LeftRightAnchorSideRotateTransform}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Model.Parent.Side, RelativeSource={RelativeSource TemplatedParent}}" Value="Right">
                            <Setter Property="LayoutTransform" Value="{StaticResource LeftRightAnchorSideRotateTransform}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Style>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AnchorTemplate" TargetType="{x:Type adc:LayoutAnchorControl}">
        <Border
            x:Name="Bd"
            Margin="0,2,2,2"
            Padding="3,1"
            Background="{DynamicResource {x:Static r:ResourceKeys.AutoHideTabDefaultBackground}}"
            BorderBrush="{DynamicResource {x:Static r:ResourceKeys.AutoHideTabDefaultBorder}}"
            BorderThickness="1"
            CornerRadius="3"
            TextOptions.TextFormattingMode="Display">
            <ContentPresenter
                Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.AutoHideTabHoveredBackground}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type adc:LayoutGridResizerControl}" TargetType="{x:Type adc:LayoutGridResizerControl}">
        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.Background}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type adc:LayoutGridResizerControl}">
                    <Border Background="{DynamicResource {x:Static r:ResourceKeys.Background}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type adc:OverlayWindow}" TargetType="{x:Type adc:OverlayWindow}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type adc:OverlayWindow}">
                    <Canvas
                        x:Name="PART_DropTargetsContainer"
                        Opacity="0.9"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True">
                        <!--
                            Drop target rectangle that is displayed before a document or tool window
                            is dropped into a drop target location
                        -->
                        <Path
                            x:Name="PART_PreviewBox"
                            Fill="{DynamicResource {x:Static r:ResourceKeys.PreviewBoxBackgroundBrushKey}}"
                            Stroke="{DynamicResource {x:Static r:ResourceKeys.PreviewBoxBorderBrushKey}}"
                            StrokeThickness="0.5" />

                        <!--
                            Outmost Outter 4 overlay buttons that are displayed at border of MainWindow
                            when user drags tool window over another tool window or document and the
                            AvalonDock air space contains additional document(s) and tool windows (s).
                        -->
                        <Grid x:Name="PART_DockingManagerDropTargets">
                            <ContentControl
                                x:Name="PART_DockingManagerDropTargetLeft"
                                Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                Margin="10"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Content="{StaticResource DockAnchorableLeft}" />

                            <ContentControl
                                x:Name="PART_DockingManagerDropTargetRight"
                                Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                Margin="10"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Content="{StaticResource DockAnchorableRight}" />

                            <ContentControl
                                x:Name="PART_DockingManagerDropTargetBottom"
                                Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                Margin="10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Content="{StaticResource DockAnchorableBottom}" />

                            <ContentControl
                                x:Name="PART_DockingManagerDropTargetTop"
                                Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                Margin="10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Content="{StaticResource DockAnchorableTop}" />

                        </Grid>

                        <!--
                            Is displayed as center cross with a max of 5 buttons when a toolwindow is
                            dragged over another tool window
                        -->
                        <Grid x:Name="PART_AnchorablePaneDropTargets">
                            <!--  Gray Star Background  -->
                            <Path
                                Height="122"
                                Data="{DynamicResource DockPaneEmpty}"
                                Fill="{DynamicResource {x:Static r:ResourceKeys.DockingButtonStarBackgroundBrushKey}}"
                                Stretch="Uniform"
                                Stroke="{DynamicResource {x:Static r:ResourceKeys.DockingButtonStarBorderBrushKey}}"
                                StrokeThickness="1" />
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--  Inner 5 buttons of star shapped control  -->
                                <ContentControl
                                    x:Name="PART_AnchorablePaneDropTargetTop"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentAsAnchorableTop}" />
                                <ContentControl
                                    x:Name="PART_AnchorablePaneDropTargetRight"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentAsAnchorableRight}" />
                                <ContentControl
                                    x:Name="PART_AnchorablePaneDropTargetBottom"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentAsAnchorableBottom}" />
                                <ContentControl
                                    x:Name="PART_AnchorablePaneDropTargetLeft"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentAsAnchorableLeft}" />
                                <!--  Center button of star shapped control  -->
                                <ContentControl
                                    x:Name="PART_AnchorablePaneDropTargetInto"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentInside}" />
                            </Grid>
                        </Grid>

                        <!--  Is displayed as center cross with a max of 5 buttons when documents are dragged over the document container.  -->
                        <Grid x:Name="PART_DocumentPaneDropTargets">

                            <!--  Gray Star Background  -->
                            <Path
                                Height="122"
                                Data="{DynamicResource DockPaneEmpty}"
                                Fill="{DynamicResource {x:Static r:ResourceKeys.DockingButtonStarBackgroundBrushKey}}"
                                Stretch="Uniform"
                                Stroke="{DynamicResource {x:Static r:ResourceKeys.DockingButtonStarBorderBrushKey}}"
                                StrokeThickness="1" />

                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--  Inner 5 buttons of star shapped control  -->
                                <ContentControl
                                    x:Name="PART_DocumentPaneDropTargetTop"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentTop}" />
                                <ContentControl
                                    x:Name="PART_DocumentPaneDropTargetRight"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentRight}" />
                                <ContentControl
                                    x:Name="PART_DocumentPaneDropTargetBottom"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentBottom}" />
                                <ContentControl
                                    x:Name="PART_DocumentPaneDropTargetLeft"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentLeft}" />
                                <!--  Center button of star shapped control  -->
                                <ContentControl
                                    x:Name="PART_DocumentPaneDropTargetInto"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentInside}" />
                            </Grid>
                        </Grid>

                        <!--  Center star with a max of 9 buttons shown when tool window is dragged of document container  -->
                        <Grid x:Name="PART_DocumentPaneFullDropTargets">

                            <!--  Gray Star Background  -->
                            <Path
                                Width="204"
                                Data="{DynamicResource DockPaneLargeEmpty}"
                                Fill="{DynamicResource {x:Static r:ResourceKeys.DockingButtonStarBackgroundBrushKey}}"
                                Stretch="Uniform"
                                Stroke="{DynamicResource {x:Static r:ResourceKeys.DockingButtonStarBorderBrushKey}}"
                                StrokeThickness="1" />
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--  Inner 5 buttons of star shapped control  -->
                                <ContentControl
                                    x:Name="PART_DocumentPaneFullDropTargetTop"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentTop}" />
                                <ContentControl
                                    x:Name="PART_DocumentPaneFullDropTargetRight"
                                    Grid.Row="2"
                                    Grid.Column="3"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentRight}" />
                                <ContentControl
                                    x:Name="PART_DocumentPaneFullDropTargetBottom"
                                    Grid.Row="3"
                                    Grid.Column="2"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentBottom}" />
                                <ContentControl
                                    x:Name="PART_DocumentPaneFullDropTargetLeft"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentLeft}" />
                                <!--  Center button of star shapped control  -->
                                <ContentControl
                                    x:Name="PART_DocumentPaneFullDropTargetInto"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentInside}" />

                                <!--  Outer 4 buttons of star shapped control  -->
                                <ContentControl
                                    x:Name="PART_DocumentPaneDropTargetTopAsAnchorablePane"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentAsAnchorableTop}" />
                                <ContentControl
                                    x:Name="PART_DocumentPaneDropTargetRightAsAnchorablePane"
                                    Grid.Row="2"
                                    Grid.Column="4"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentAsAnchorableRight}" />
                                <ContentControl
                                    x:Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane"
                                    Grid.Row="4"
                                    Grid.Column="2"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentAsAnchorableBottom}" />
                                <ContentControl
                                    x:Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane"
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Width="{DynamicResource {x:Static r:ResourceKeys.DockingButtonWidthKey}}"
                                    Height="{DynamicResource {x:Static r:ResourceKeys.DockingButtonHeightKey}}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Content="{StaticResource DockDocumentAsAnchorableLeft}" />
                            </Grid>
                        </Grid>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDock:DockingManager}" TargetType="{x:Type avalonDock:DockingManager}">
        <Setter Property="Background" Value="{DynamicResource {x:Static r:ResourceKeys.Background}}" />
        <Setter Property="DocumentPaneControlStyle" Value="{StaticResource DocumentPaneControlStyle}" />
        <Setter Property="AnchorablePaneControlStyle" Value="{StaticResource AnchorablePaneControlStyle}" />
        <Setter Property="AnchorSideTemplate" Value="{StaticResource AnchorSideTemplate}" />
        <Setter Property="AnchorGroupTemplate" Value="{StaticResource AnchorGroupTemplate}" />
        <Setter Property="AnchorTemplate" Value="{StaticResource AnchorTemplate}" />
        <Setter Property="DocumentHeaderTemplate" Value="{StaticResource DocumentHeaderTemplate}" />
        <Setter Property="AnchorableHeaderTemplate" Value="{StaticResource AnchorableHeaderTemplate}" />
        <Setter Property="DocumentTitleTemplate" Value="{StaticResource DocumentTitleTemplate}" />
        <Setter Property="AnchorableTitleTemplate" Value="{StaticResource AnchorableTitleTemplate}" />
        <Setter Property="AnchorableContextMenu" Value="{StaticResource AnchorableContextMenu}" />
        <Setter Property="DocumentContextMenu" Value="{StaticResource DocumentContextMenu}" />
        <Setter Property="DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource DocumentHeaderTemplate}" />
        <Setter Property="IconContentTemplate" Value="{StaticResource IconContentTemplate}" />
        <Setter Property="GridSplitterWidth" Value="3" />
        <Setter Property="GridSplitterHeight" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDock:DockingManager}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid FlowDirection="LeftToRight">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                Grid.Row="1"
                                Grid.Column="1"
                                Content="{TemplateBinding LayoutRootPanel}" />
                            <ContentPresenter
                                Grid.Row="1"
                                Grid.Column="2"
                                Content="{TemplateBinding RightSidePanel}" />
                            <ContentPresenter
                                Grid.Row="1"
                                Grid.Column="0"
                                Content="{TemplateBinding LeftSidePanel}" />
                            <ContentPresenter
                                Grid.Row="0"
                                Grid.Column="1"
                                Content="{TemplateBinding TopSidePanel}" />
                            <ContentPresenter
                                Grid.Row="2"
                                Grid.Column="1"
                                Content="{TemplateBinding BottomSidePanel}" />
                            <ContentPresenter
                                x:Name="PART_AutoHideArea"
                                Grid.Row="1"
                                Grid.Column="1"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Content="{TemplateBinding AutoHideWindow}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>