<UserControl
    x:Class="LogicSimulator.Views.PropertiesView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avm="clr-namespace:LogicSimulator.ViewModels.AnchorableViewModels"
    xmlns:base="clr-namespace:LogicSimulator.ViewModels.EditorViewModels.Base"
    xmlns:cont="clr-namespace:LogicSimulator.Controls;assembly=LogicSimulator.Controls"
    xmlns:converters="clr-namespace:LogicSimulator.Infrastructure.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:me="clr-namespace:LogicSimulator.Infrastructure.MarkupExtensions"
    d:DataContext="{d:DesignInstance Type=avm:PropertiesViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/LogicSimulator.Controls;component/Styles/PropertiesEditorStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:ColorToColor4Converter x:Key="ColorToColor4Converter" />

            <DataTemplate DataType="{x:Type base:FloatPropertyViewModel}">
                <cont:NumberBox IsValueUndefined="{Binding Path=IsValueUndefined}" Number="{Binding Path=Value}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type base:Vector2PropertyViewModel}">
                <cont:Vector2Box
                    IsVectorXUndefined="{Binding Path=IsXUndefined}"
                    IsVectorYUndefined="{Binding Path=IsYUndefined}"
                    Vector="{Binding Path=Value}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type base:Color4PropertyViewModel}">
                <cont:ColorPicker IsValueUndefined="{Binding Path=IsValueUndefined}" Color="{Binding Path=Value, Converter={StaticResource ColorToColor4Converter}}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type base:BoolPropertyViewModel}">
                <cont:CheckBoxEx IsChecked="{Binding Path=Value}" IsValueUndefined="{Binding Path=IsValueUndefined}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type base:StringPropertyViewModel}">
                <cont:StringBox IsValueUndefined="{Binding Path=IsValueUndefined}" String="{Binding Path=Value}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type base:RotationEnumPropertyViewModel}">
                <cont:ComboBoxEx
                    IsValueUndefined="{Binding Path=IsValueUndefined}"
                    ItemsSource="{Binding Path=Rotations}"
                    SelectedValue="{Binding Path=Value}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type base:FontNamePropertyViewModel}">
                <cont:ComboBoxEx
                    IsValueUndefined="{Binding Path=IsValueUndefined}"
                    ItemsSource="{Binding Source={me:SystemFontFamilies}}"
                    SelectedValue="{Binding Path=Value}" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type base:FontPropertyViewModel}">
                <cont:ClippingBorder
                    Margin="4"
                    Background="#222222"
                    BorderBrush="#222222"
                    BorderThickness="1"
                    CornerRadius="5"
                    SnapsToDevicePixels="True"
                    UseLayoutRounding="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <cont:CheckBoxEx
                            Grid.Column="0"
                            Margin="0,0,1,0"
                            IsChecked="{Binding Path=Properties[IsBold].Value}"
                            IsValueUndefined="{Binding Path=Properties[IsBold].IsValueUndefined}"
                            Style="{StaticResource FontCheckBoxStyle}">
                            <cont:CheckBoxEx.Content>
                                <Path
                                    Height="13"
                                    Data="{StaticResource BoldTextIcon}"
                                    Fill="{Binding Path=Foreground,
                                                   RelativeSource={RelativeSource AncestorType=cont:CheckBoxEx}}"
                                    Stretch="Uniform" />
                            </cont:CheckBoxEx.Content>
                        </cont:CheckBoxEx>
                        <cont:CheckBoxEx
                            Grid.Column="1"
                            Margin="0,0,1,0"
                            IsChecked="{Binding Path=Properties[IsItalic].Value}"
                            IsValueUndefined="{Binding Path=Properties[IsItalic].IsValueUndefined}"
                            Style="{StaticResource FontCheckBoxStyle}">
                            <cont:CheckBoxEx.Content>
                                <Path
                                    Height="13"
                                    Data="{StaticResource ItalicTextIcon}"
                                    Fill="{Binding Path=Foreground,
                                                   RelativeSource={RelativeSource AncestorType=cont:CheckBoxEx}}"
                                    Stretch="Uniform" />
                            </cont:CheckBoxEx.Content>
                        </cont:CheckBoxEx>
                        <cont:CheckBoxEx
                            Grid.Column="2"
                            Margin="0,0,1,0"
                            IsChecked="{Binding Path=Properties[IsUnderlined].Value}"
                            IsValueUndefined="{Binding Path=Properties[IsUnderlined].IsValueUndefined}"
                            Style="{StaticResource FontCheckBoxStyle}">
                            <cont:CheckBoxEx.Content>
                                <Path
                                    Height="13"
                                    Data="{StaticResource UnderlinedTextIcon}"
                                    Fill="{Binding Path=Foreground,
                                                   RelativeSource={RelativeSource AncestorType=cont:CheckBoxEx}}"
                                    Stretch="Uniform" />
                            </cont:CheckBoxEx.Content>
                        </cont:CheckBoxEx>
                        <cont:CheckBoxEx
                            Grid.Column="3"
                            IsChecked="{Binding Path=Properties[IsCross].Value}"
                            IsValueUndefined="{Binding Path=Properties[IsCross].IsValueUndefined}"
                            Style="{StaticResource FontCheckBoxStyle}">
                            <cont:CheckBoxEx.Content>
                                <Path
                                    Height="13"
                                    Data="{StaticResource CrossTextIcon}"
                                    Fill="{Binding Path=Foreground,
                                                   RelativeSource={RelativeSource AncestorType=cont:CheckBoxEx}}"
                                    Stretch="Uniform" />
                            </cont:CheckBoxEx.Content>
                        </cont:CheckBoxEx>
                    </Grid>
                </cont:ClippingBorder>
            </DataTemplate>

            <DataTemplate DataType="{x:Type base:VerticesPropertyViewModel}">
                <Grid>
                    <Grid x:Name="VertexesGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DataGrid
                            MaxHeight="156"
                            Margin="4"
                            AutoGenerateColumns="False"
                            Background="#484848"
                            BorderBrush="#232323"
                            BorderThickness="1"
                            CanUserAddRows="False"
                            CanUserDeleteRows="False"
                            CanUserReorderColumns="False"
                            CanUserResizeRows="False"
                            Foreground="White"
                            HorizontalGridLinesBrush="#353535"
                            ItemsSource="{Binding Path=Value}"
                            RowBackground="#3B3B3B"
                            SelectedIndex="{Binding Path=SelectedVertexIndex}"
                            SelectionMode="Single"
                            SelectionUnit="FullRow"
                            SnapsToDevicePixels="True"
                            UseLayoutRounding="True"
                            VerticalGridLinesBrush="#353535">
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                <Grid>
                                                    <Border
                                                        x:Name="columnHeaderBorder"
                                                        Background="#484848"
                                                        BorderBrush="#232323"
                                                        BorderThickness="0,0,0,1">
                                                        <ContentPresenter
                                                            Margin="5,3"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Border>

                                                    <Thumb
                                                        x:Name="PART_LeftHeaderGripper"
                                                        Width="6"
                                                        HorizontalAlignment="Left"
                                                        Cursor="SizeWE">
                                                        <Thumb.Template>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Border
                                                                    Margin="-1,3,0,3"
                                                                    Background="Transparent"
                                                                    BorderBrush="#222222"
                                                                    BorderThickness="1,0,0,0" />
                                                            </ControlTemplate>
                                                        </Thumb.Template>
                                                    </Thumb>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Offset="0" Color="{DynamicResource ControlLightColor}" />
                                                <GradientStop Offset="1" Color="{DynamicResource ControlMediumColor}" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>
                            <DataGrid.RowHeaderStyle>
                                <Style TargetType="{x:Type DataGridRowHeader}">
                                    <Setter Property="Template" Value="{x:Null}" />
                                </Style>
                            </DataGrid.RowHeaderStyle>

                            <DataGrid.Columns>
                                <DataGridTextColumn
                                    Width="Auto"
                                    Binding="{Binding Path=Index}"
                                    CanUserSort="True"
                                    Header="№"
                                    IsReadOnly="True" />
                                <DataGridTextColumn
                                    Width="*"
                                    Binding="{Binding Path=X}"
                                    CanUserSort="False"
                                    Header="X" />
                                <DataGridTextColumn
                                    Width="*"
                                    Binding="{Binding Path=Y}"
                                    CanUserSort="False"
                                    Header="Y" />
                            </DataGrid.Columns>
                        </DataGrid>

                        <StackPanel
                            Grid.Row="1"
                            Margin="4"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                            <Button
                                Margin="0,0,4,0"
                                Padding="8,5"
                                Command="{Binding Path=AddVertexCommand}">
                                <Button.Content>
                                    <Path
                                        Height="13"
                                        Data="{StaticResource PlusIcon}"
                                        Fill="#FDFDFD"
                                        Stretch="Uniform" />
                                </Button.Content>
                            </Button>
                            <Button Padding="8,5" Command="{Binding Path=RemoveVertexCommand}">
                                <Button.Content>
                                    <Path
                                        Height="13"
                                        Data="{StaticResource TrashIcon}"
                                        Fill="#FDFDFD"
                                        Stretch="Uniform" />
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <TextBox
                        x:Name="Border"
                        Height="100"
                        Margin="4"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        IsReadOnly="True"
                        Text="Одновременное редактирование недоступно"
                        TextWrapping="Wrap"
                        Visibility="Collapsed" />
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path=Value}" Value="{x:Null}">
                        <Setter TargetName="VertexesGrid" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="Border" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer
        DataContext="{Binding Path=CurrentEditorViewModel}"
        HorizontalScrollBarVisibility="Disabled"
        VerticalScrollBarVisibility="Auto">

        <Grid Margin="5" Background="#404040">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock
                Grid.Row="0"
                Margin="4,4"
                HorizontalAlignment="Left"
                Text="{Binding Path=Layout.ObjectName}" />
            <ItemsControl
                Grid.Row="1"
                Focusable="False"
                Grid.IsSharedSizeScope="True"
                ItemsSource="{Binding Path=Layout.Groups}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Expander Header="{Binding Path=Name}">
                            <ItemsControl
                                Margin="3"
                                Focusable="False"
                                ItemsSource="{Binding Path=EditorRows}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <DataTemplate.Resources>
                                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                                <Setter Property="Margin" Value="5" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                            </Style>
                                        </DataTemplate.Resources>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                Grid.Column="0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Text="{Binding Path=Name}" />
                                            <ItemsControl
                                                x:Name="Properties"
                                                Grid.Column="1"
                                                Focusable="False"
                                                ItemsSource="{Binding Path=ObjectProperties}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <cont:GridEx ColumnsLayout="{Binding Path=Layout}" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=Name}" Value="">
                                                <Setter TargetName="Properties" Property="Grid.ColumnSpan" Value="2" />
                                                <Setter TargetName="Properties" Property="Grid.Column" Value="0" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Expander>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </ScrollViewer>
</UserControl>
